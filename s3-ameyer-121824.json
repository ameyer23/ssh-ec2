{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Condition": {
				"StringEqualsIfExists": {
					"aws:RequestedRegion": [
						"us-east-1",
						"us-east-2"
					],
					"ec2:InstanceType": "t2.micro"
				},
				"ArnEquals": {
					"aws:PrincipalArn": "arn:aws:iam::975049943273:user/${aws:username}"
				}
			},
			"Action": [
				"ec2:DescribeVpcs",
				"ec2:DescribeSubnets",
				"ec2:DescribeInstances",
				"ec2:DescribeInstanceStatus",
				"ec2:DescribeVolumes",
				"ec2:DescribeKeyPairs",
				"ec2:DescribeSecurityGroups",
				"ec2:DescribeSecurityGroupRules",
				"ec2:DescribeImages"
			],
			"Resource": "*",
			"Effect": "Allow"
		},
		{
			"Condition": {
				"StringEqualsIfExists": {
					"aws:RequestedRegion": "us-east-2",
					"ec2:InstanceType": "t2.micro"
				},
				"ArnEquals": {
					"aws:PrincipalArn": "arn:aws:iam::975049943273:user/${aws:username}"
				}
			},
			"Action": [
				"ec2:RunInstances",
				"ec2:StartInstances",
				"ec2:StopInstances",
				"ec2:TerminateInstances",
				"ec2:ModifySecurityGroupRules",
				"ec2:AllocateAddress",
				"ec2:AssociateAddress",
				"ec2:DescribeSecurityGroupRules",
				"ec2:ModifySubnetAttribute",
				"ec2:CreateTags",
				"ec2:CreateSecurityGroup",
				"ec2:DeleteSecurityGroup",
				"ec2:GetSecurityGroupsForVpc",
				"ec2:AuthorizeSecurityGroupIngress",
				"ec2:RevokeSecurityGroupIngress",
				"ec2:AuthorizeSecurityGroupEgress",
				"ec2:RevokeSecurityGroupEgress",
				"ec2:CreateKeyPair",
				"ec2:CreateKeyPair"
			],
			"Resource": "*",
			"Effect": "Allow"
		},
		{
			"Condition": {
				"StringEqualsIfExists": {
					"aws:RequestedRegion": [
						"us-east-1",
						"us-east-2"
					]
				}
			},
			"Action": [
				"ec2:AllocateAddress",
				"ec2:AssociateAddress",
				"ec2-instance-connect:SendSSHPublicKey",
				"ec2-instance-connect:SendSerialConsoleSSHPublicKey"
			],
			"Resource": "*",
			"Effect": "Deny"
		},
		{
			"Condition": {
				"StringEqualsIfExists": {
					"aws:RequestedRegion": [
						"us-east-1",
						"us-east-2"
					]
				}
			},
			"Action": [
				"ssm:StartSession",
				"ssm:SendCommand",
				"ssm:StartAutomationExecution"
			],
			"Resource": "*",
			"Effect": "Deny"
		},
		{
			"Effect": "Allow",
			"Action": [
				"iam:GetRole",
				"iam:ListRoles",
				"iam:UpdateRole",
				"iam:TagRole",
				"iam:AttachRolePolicy",
				"iam:DetachRolePolicy",
				"iam:ListAttachedRolePolicies",
				"iam:PassRole",
				"iam:PutRolePolicy",
				"iam:DeleteRolePolicy",
				"iam:GetRolePolicy"
			],
			"Resource": "arn:aws:iam::975049943273:role/S3AccessRole"
		},
		{
			"Effect": "Allow",
			"Action": "iam:ListInstanceProfiles",
			"Resource": "arn:aws:iam::975049943273:instance-profile/*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:AssociateIamInstanceProfile",
				"ec2:ReplaceIamInstanceProfileAssociation",
				"ec2:DescribeIamInstanceProfileAssociations"
			],
			"Resource": [
				"arn:aws:iam::975049943273:instance-profile/S3AccessRole",
				"arn:aws:ec2:us-east-2:975049943273:instance/*",
				"arn:aws:sts::975049943273:assumed-role/S3AccessRole/*"
			],
			"Condition": {
				"StringEquals": {
					"aws:PrincipalArn": "arn:aws:iam::975049943273:user/${aws:username}"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": "iam:ListPolicies",
			"Resource": "*"
		},
		{
			"Action": "s3:ListAllMyBuckets",
			"Resource": "arn:aws:s3:::*",
			"Effect": "Allow"
		},
		{
			"Condition": {
				"StringEquals": {
					"aws:RequestedRegion": [
						"us-east-1",
						"us-east-2"
					]
				},
				"ArnEquals": {
					"aws:PrincipalArn": "arn:aws:iam::975049943273:user/${aws:username}"
				}
			},
			"Action": [
				"s3:CreateBucket",
				"s3:DeleteBucket",
				"s3:ListBucket",
				"s3:ListObjects",
				"s3:GetObject",
				"s3:GetAccountPublicAccessBlock",
				"s3:GetBucketPublicAccessBlock",
				"s3:GetBucketOwnershipControls",
				"s3:GetBucketAcl",
				"s3:GetBucketPolicy",
				"s3:PutBucketOwnershipControls",
				"s3:PutBucketPublicAccessBlock",
				"s3:PutEncryptionConfiguration"
			],
			"Resource": "arn:aws:s3:::ssh-assessment-bucket-*",
			"Effect": "Allow"
		},
		{
			"Condition": {
				"NumericLessThanEquals": {
					"s3:objectMaxSize": 10485760
				}
			},
			"Action": "s3:PutObject",
			"Resource": "arn:aws:s3:::ssh-assessment-bucket-*",
			"Effect": "Allow"
		},
		{
			"Effect": "Allow",
			"Action": [
				"s3:GetObject",
				"s3:DeleteObject",
				"s3:ListBucketVersions"
			],
			"Resource": "arn:aws:s3:::ssh-assessment-bucket-*",
			"Condition": {
				"ArnEquals": {
					"aws:PrincipalArn": "arn:aws:iam::975049943273:user/${aws:username}"
				}
			}
		}
	]
}