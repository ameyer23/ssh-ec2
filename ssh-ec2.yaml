# 4th attempt :::::

AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for an SSH with restricted EC2 permissions and configured S3 access.
Parameters:
  StudentGroupName:
    Description: "Name of the pre-existing IAM group."
    Type: String
    Default: "StudentGroup"
  AmazonLinux2023AmiId:
    Description: "Latest Amazon Linux 2023 AMI ID"
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'

Resources:
  # Custom VPC 
  CustomVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: CustomVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CustomInternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref CustomVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CustomVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: CustomPublicSubnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CustomVPC
      Tags:
        - Key: Name
          Value: CustomTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet


  # Policy for Group
  EC2UserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "SSHLabPolicy"
      Groups:
        - Ref: GroupName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # Allow viewing permissions for both us-east-1 and us-east-2
          - Effect: Allow
            Action:
              - "ec2:DescribeVpcs"
              - "ec2:DescribeSubnets"
              - "ec2:DescribeInstances"
              - "ec2:DescribeInstanceStatus"
              - "ec2:DescribeVolumes"
              - "ec2:DescribeKeyPairs"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeSecurityGroupRules"
              - "ec2:DescribeImages"
          - Condition:
              StringEqualsIfExists:
                aws:RequestedRegion:
                  - "us-east-1"
                  - "us-east-2"
                ec2:InstanceType: "t2.micro"
              ArnEquals:
                aws:PrincipalArn: "arn:aws:iam::${AWS::AccountId}:user/${aws:username}"
            Resource: "*"

          # Allow deploying EC2 instances and creating security groups in us-east-2 only
          - Effect: Allow
            Action:
              - "ec2:RunInstances"
              - "ec2:StartInstances"
              - "ec2:StopInstances"
              - "ec2:TerminateInstances"
              - "ec2:ModifySecurityGroupRules"
              - "ec2:AllocateAddress"
              - "ec2:AssociateAddress"
              - "ec2:ModifySubnetAttribute"
              - "ec2:CreateTags"
              - "ec2:CreateSecurityGroup"
              - "ec2:DeleteSecurityGroup"
              - "ec2:GetSecurityGroupsForVpc"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:RevokeSecurityGroupIngress"
              - "ec2:AuthorizeSecurityGroupEgress"
              - "ec2:RevokeSecurityGroupEgress"
              - "ec2:CreateKeyPair"
            Condition:
              StringEqualsIfExists:
                aws:RequestedRegion: "us-east-2"
                ec2:InstanceType: "t2.micro"
                ec2:ImageId: !Ref AmazonLinux2023AmiId
            Resource: "*"

         # Deny EC2 Instance Connect.
          - Effect: Deny
            Action:
              - "ec2-instance-connect:SendSSHPublicKey"
              - "ec2-instance-connect:SendSerialConsoleSSHPublicKey"
            Resource: "*"

          # Deny EC2 SSM session management.
          - Effect: Deny
            Action:
              - "ssm:StartSession"
              - "ssm:SendCommand"
              - "ssm:StartAutomationExecution"
            Condition:
              StringEqualsIfExists:
                aws:RequestedRegion:
                  - "us-east-1"
                  - "us-east-2"
            Resource: "*"

          # Allow managing IAM roles and policies.
          - Effect: Allow
            Action:
              - "iam:GetRole"
              - "iam:ListRoles"
              - "iam:TagRole"
              - "iam:AttachRolePolicy"
              - "iam:DetachRolePolicy"
              - "iam:ListAttachedRolePolicies"
              - "iam:PassRole"
              - "iam:PutRolePolicy"
              - "iam:DeleteRolePolicy"
              - "iam:GetRolePolicy"
            Resource: "arn:aws:iam::${AWS::AccountId}:role/AccessRole"

          # Allow listing instance profiles in IAM.
          - Effect: Allow
            Action: "iam:ListInstanceProfiles"
            Resource: "arn:aws:iam::${AWS::AccountId}:instance-profile/*"

          # Allow associating IAM instance profiles with EC2 instances.
          - Effect: Allow
            Action:
              - "ec2:AssociateIamInstanceProfile"
              - "ec2:ReplaceIamInstanceProfileAssociation"
              - "ec2:DescribeIamInstanceProfileAssociations"
            Condition:
              StringEquals:
                aws:PrincipalArn: "arn:aws:iam::${AWS::AccountId}:user/${aws:username}"
            Resource:
              - "arn:aws:iam::${AWS::AccountId}:instance-profile/AccessRole"
              - "arn:aws:ec2:us-east-2:${AWS::AccountId}:instance/*"
              - "arn:aws:sts::${AWS::AccountId}:assumed-role/AccessRole/*"

          # Allow listing IAM policies.
          - Effect: Allow
            Action: "iam:ListPolicies"
            Resource: "*"

          # Allow listing all S3 buckets.
          - Action: "s3:ListAllMyBuckets"
            Resource: "arn:aws:s3:::*"
            Effect: Allow

          # Allow managing specific S3 buckets with set naming convention
          - Effect: Allow
            Action:
              - "s3:CreateBucket"
              - "s3:DeleteBucket"
              - "s3:ListBucket"
              - "s3:ListObjects"
              - "s3:GetObject"
              - "s3:GetAccountPublicAccessBlock"
              - "s3:GetBucketPublicAccessBlock"
              - "s3:GetBucketOwnershipControls"
              - "s3:GetBucketAcl"
              - "s3:GetBucketPolicy"
              - "s3:PutBucketOwnershipControls"
              - "s3:PutBucketPublicAccessBlock"
              - "s3:PutEncryptionConfiguration"
            Condition:
              StringEquals:
                aws:RequestedRegion:
                  - "us-east-1"
                  - "us-east-2"
              ArnEquals:
                aws:PrincipalArn: "arn:aws:iam::${AWS::AccountId}:user/${aws:username}"
            Resource: "arn:aws:s3:::ssh-assessment-bucket-*"

          # Allow uploading objects to specific S3 buckets with size restrictions.
          - Effect: Allow
            Action: "s3:PutObject"
            Condition:
              NumericLessThanEquals:
                s3:objectMaxSize: 10485760
            Resource: "arn:aws:s3:::ssh-assessment-bucket-*"

          # Allow managing objects in specific S3 buckets with conditions.
          - Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:DeleteObject"
              - "s3:ListBucketVersions"
            Resource: "arn:aws:s3:::ssh-assessment-bucket-*"
            Condition:
              ArnEquals:
                aws:PrincipalArn: "arn:aws:iam::${AWS::AccountId}:user/${aws:username}"

  Outputs:
  VPCId:
    Description: "VPC ID for the Level Up Bank lab"
    Value: !Ref CustomVPC

  SubnetId:
    Description: "Public Subnet ID"
    Value: !Ref PublicSubnet

  PolicyName:
    Description: "The name of the policy attached to the Group"
    Value: !Ref EC2UserPolicy